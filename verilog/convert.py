def generate_verilog_char(hex_lines):
    """
    输入：字符串，每行是一个128-bit（32 hex字符）宽的十六进制字符串（可含冒号）
    输出：Verilog char[N] <= 128'hXXXX...XXXX; 的代码列表
    """
    hex_lines = hex_lines.strip().splitlines()
    result = []
    for i, line in enumerate(hex_lines):
        clean_line = line.strip().replace(";", "")
        if len(clean_line) != 32:
            raise ValueError(f"Line {i} is not 128 bits long (32 hex digits): {clean_line}")
        result.append(f"char[{i:2}] <= 128'h{clean_line};")
    return result

# 示例用法
data = '''
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
0000000000004000000000000000E000;
007FFFFFFFFFF000003FFFFFFFFFF800;
0018003C0001E0000000003C0001E000;
0000003C0001E0000000003C0001E000;
0000003C0001E0000000003C0001E000;
0000003C0001E0000000003C0001E000;
0000003C0001E1800000003C0001E3C0;
0000003C0001E7E00FFFFFFFFFFFFFF0;
07FFFFFFFFFFFFF8030000380001E000;
000000380001E000000000380001E000;
000000380001E000000000380001E000;
000000780001E000000000780001E000;
000000780001E000000000780001E000;
000000780001E000000000780001E000;
007FFFFFFFFFE000003FFFFFFFFFE000;
001000700001E000000000F00001E000;
000000F00001E000000000F000010000;
000000E000000000000001E000000000;
000001E000000000000003C000000000;
000003C0000000000000078000000000;
000007800000000000000F0000000000;
00000E000000000000001E0000000000;
00003C00000000000000780000000000;
0000F000000000000001E00000000000;
00038000000000000007000000000000;
001E0000000000000038000000000000;
00E00000000000000380000000000000;
06000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000800000000000;
0000E000000000000000F80000000000;
0000F800000000800000F000000001C0;
0000F001FFFFFFE00000F000FFFFFFE0;
0000F00061E003C00000F00001E00380;
0000F02001E003800000F07001E00380;
07FFFFF801E0038003FFFFFC01E00380;
0100F00001E003800000F00003C00780;
0000F00003C007800000F00003C00780;
0000F000078007800000F00007800780;
0000F0000F0007000000F0000E060F00;
0000F0301E03FF000000F0783C00FE00;
1FFFFFFC38003E000FFFFFFE70001800;
04007001E00010000000700380000000;
00007007000000000000700420000200;
000070003800070000E070003FFFFF80;
00F870003FFFFFC000F870003C000F80;
00F070183C000F0000F0703C3C000F00;
00E07FFE3C000F0000E07FFF3C000F00;
00E070003C000F0000E070003C000F00;
00E070003C000F0000E070003C000F00;
01E070003C000F0001E070003C000F00;
01F070003C000F0001D870003FFFFF00;
01DC70003FFFFF0001CE70003C000F00;
038770003C000F000383F0003C000E00;
0301F0003C0008000700F80030000000;
06003F000000000006001FF000000000;
0C0007FFF00000000C0000FFFFFFFFF8;
1800001FFFFFFFE0100000007FFFFF80;
20000000000FFF800000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000080000000;
00000000E000000000000000F8000000;
00000400F800000000000F00E0000000;
0FFFFF80E000000007FFFF00E0001800;
02000E00E0001C0000000E00E0003E00;
00000E00E0007E0000000E00E0007E00;
00000E00E000F80000000E00E001F000;
00000E00E003C00000000E00E0078000;
00000E00E00F000001000E00E01E0000;
01800E00E03C000001FFFE00E0780000;
01FFFE00E0E0000001E00E00E1C00000;
01E00F00E380000001C00800E6000000;
01C00000EC00000001C00000F0000100;
01C00000E000038001C00000E00007C0;
01C003FFFFFFFFE003C011FFFFFFFFF0;
03C01CC0E080000007FFFE00E0800000;
07FFFE00E0C0000003803C00E0C00000;
01003800E060000000003800E0600000;
00003800E070000000003800E0300000;
00003800E038000000003800E0380000;
00003800E01C000000003800E01E0000;
00003800E00E000000007800E0070000;
00007800E007800000007800E003C000;
00007000E003E00000007000E001F000;
00007000E018F8000000F000E0607E00;
0000F000E1C03F800000E000E7803FE0;
03C1E000FF001FF800FFE000FE000FE0;
003FC001FC000780001F8001F8000100;
001F0000F0000000000E000060000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
000000C000000080000001E0000003C0;
1FFFFFF7FFFFFFE00FFFFFFBFFFFFFF0;
0603C001007800000007800000780000;
00078000007000000007800000700000;
0007800000E000000007000000E00000;
000F000000C00000000F000000C00000;
000E000000800200000E000181800700;
001E0001FFFFFFC0001C0001FFFFFF80;
001C0001E0000700003C0001E0000700;
00380001E000070000380381E0400700;
007FFFC1E0200700007FFFC1E0380700;
00F80781E03E070000F80781E03C0700;
00F80781E038070001F80781E0780700;
01B80781E078070003B80781E0780700;
03380781E078070006380781E0780700;
04380781E07807000C380781E0780700;
18380781E078070010380781E0780700;
00380781E070070000380781E0700700;
00380781E0F0070000380781E0F00700;
00380781E0F0070000380781E0E00700;
003FFF81E1E00600003FFF8181E00400;
0038078003C600000038078003C38000;
003807000781E000003804000F00F800;
003800000F003E00003800001E001F00;
003800007C000FC000200000F8000FC0;
00000001E00007E000000007C00003E0;
0000000F000001E00000003C000001E0;
000000F0000000E00000038000000040;
00000C00000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000002000000000000000380000000;
00000003E000000000000003E0000000;
00000003C00000000000000380000000;
00000003800002000000000380000700;
0000000380000F800FFFFFFFFFFFFFC0;
07FFFFFFFFFFFFE00300007B90000000;
0000007B98000000000000F38C000000;
000001E38E000000000003C386000000;
00000383830000000000078383800000;
00000F0381E0000000001E0380F00000;
00003803807C000000007003803E0000;
0000E003801FC0000001C003800FF000;
000780038007FE00000E00020021FFF0;
001C00000070FFF00070FFFFFFF83F80;
00C07FFFFFFC0E000380000000FE0200;
0E00000001F800001800000003C00000;
0000000007000000000000011C000000;
00000001F800000000000001E0000000;
00000001F800000000000001F0000100;
00000001E000038000000001E00007C0;
0FFFFFFFFFFFFFE007FFFFFFFFFFFFF0;
02000001E000000000000001E0000000;
00000001E000000000000001E0000000;
00000001E000000000000001E0000000;
00000001E000000000000001E0000000;
00000001E000000000000001E0000000;
00000601E0000000000007FFE0000000;
0000007FC00000000000001FC0000000;
0000000F800000000000000700000000;
00000004000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000200;
00000000000007000000000000000F80;
07FFFFFFFFFFFFC003FFFFFFFFFFFFE0;
01000003800000000000000380000000;
00000003800000000000000380000000;
00000003800000000000000380000000;
00000003800000000040000380001000;
0020000380003C00003FFFFFFFFFFE00;
003FFFFFFFFFFE000038000380003C00;
0038000380003C000038000380003C00;
0038000380003C00003870038E003C00;
00383C0387803C0000381E0383E03C00;
00380F8381F03C0000380F8380F83C00;
003807C380783C00003803C380383C00;
0038038380383C000038018380183C00;
0038000380003C000038000380003C00;
0038000380003C000038000380003C00;
0038000380003C000038E00380003C00;
0038780386003C0000383E0383C03C00;
00381F0381F03C0000380F8380F83C00;
0038078380783C0000380783807C3C00;
00380383803C3C000038030380183C00;
0038000380183C000038000380003C00;
0038000380003C000038000380003C00;
0038000380003C000038000380007800;
0038000380FFF80000380003800FF800;
003800038003F800003800030001F000;
003000040000E0000040000000008000;
00000000000000000000000000000000;
00000000000000000000000000000000;
00000000000000000000000000000000;
0008000000000000000E000000000000;
000F800000000000000F800000000000;
000F000000000200000E000000000700;
000E000000000F80000E01FFFFFFFFC0;
000E00FFFFFFFFE0000E004000000000;
000E000000000000000E000000000000;
000F000000000000000FC00000000000;
000EF00000000000000E781000002000;
010E3C1800007000010E3E1FFFFFFC00;
010E1E1FFFFFFE00010E1E1E00007800;
030E0E1E00007800030E0E1E00007800;
030E041E00007800070E001E00007800;
070E001E000078000F0E001E00007800;
1F0E001E000078003F0E001E00007800;
3E0E001FFFFFF800000E001FFFFFF800;
000E001E00007800000E001E00007800;
000E001E00007800000E001E00007800;
000E001E00007800000E001E00007800;
000E001E00007800000E001E00007800;
000E001E00007800000E001E00007800;
000E001E00007800000E001FFFFFF800;
000E001FFFFFF800000E001E00007800;
000E001E00007800000E001E00007000;
000E001C00004000000E001000000000;
000E000000000000000E000000000180;
000E0000000003C0000E0000000007E0;
000E1FFFFFFFFFF0000E0FFFFFFFFFF8;
000E040000000000000E000000000000;
000E000000000000000F000000000000;
00080000000000000000000000000000;
00000000000000000000000000000000;
'''

for line in generate_verilog_char(data):
    print(line)
